// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyecto_Nel.Data;

namespace proyecto_Nel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220505162351_Pedido_y_ItemPedido")]
    partial class Pedido_y_ItemPedido
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("proyecto_Nel.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdPropiedad")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdPropiedad");

                    b.ToTable("ItemsPedidos");
                });

            modelBuilder.Entity("proyecto_Nel.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("proyecto_Nel.Models.ciudades", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logolURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCiudad");

                    b.ToTable("ciudades");
                });

            modelBuilder.Entity("proyecto_Nel.Models.empleados", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoDePerfilURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpleado");

                    b.ToTable("empleados");
                });

            modelBuilder.Entity("proyecto_Nel.Models.propiedades", b =>
                {
                    b.Property<int>("IdPropiedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPropiedadURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpelado")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropiedadCiudad")
                        .HasColumnType("int");

                    b.Property<double>("precioPropiedad")
                        .HasColumnType("float");

                    b.HasKey("IdPropiedad");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("propiedades");
                });

            modelBuilder.Entity("proyecto_Nel.Models.propietario", b =>
                {
                    b.Property<int>("IdPropietario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPropietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoDePerfilURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPropietario");

                    b.ToTable("propietario");
                });

            modelBuilder.Entity("proyecto_Nel.Models.propietarios_propiedad", b =>
                {
                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<int>("IdPropiedad")
                        .HasColumnType("int");

                    b.HasKey("IdPropietario", "IdPropiedad");

                    b.HasIndex("IdPropiedad");

                    b.ToTable("propietarios_propiedad");
                });

            modelBuilder.Entity("proyecto_Nel.Models.ItemPedido", b =>
                {
                    b.HasOne("proyecto_Nel.Models.Pedido", "pedido")
                        .WithMany("ItemsPedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto_Nel.Models.propiedades", "propiedad")
                        .WithMany()
                        .HasForeignKey("IdPropiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");

                    b.Navigation("propiedad");
                });

            modelBuilder.Entity("proyecto_Nel.Models.propiedades", b =>
                {
                    b.HasOne("proyecto_Nel.Models.ciudades", "ciudades")
                        .WithMany("propiedades")
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto_Nel.Models.empleados", "empleados")
                        .WithMany("propiedades")
                        .HasForeignKey("IdEmpleado");

                    b.Navigation("ciudades");

                    b.Navigation("empleados");
                });

            modelBuilder.Entity("proyecto_Nel.Models.propietarios_propiedad", b =>
                {
                    b.HasOne("proyecto_Nel.Models.propiedades", "propiedades")
                        .WithMany("propietarios_propiedad")
                        .HasForeignKey("IdPropiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto_Nel.Models.propietario", "propietario")
                        .WithMany("propietarios_propiedad")
                        .HasForeignKey("IdPropietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("propiedades");

                    b.Navigation("propietario");
                });

            modelBuilder.Entity("proyecto_Nel.Models.Pedido", b =>
                {
                    b.Navigation("ItemsPedidos");
                });

            modelBuilder.Entity("proyecto_Nel.Models.ciudades", b =>
                {
                    b.Navigation("propiedades");
                });

            modelBuilder.Entity("proyecto_Nel.Models.empleados", b =>
                {
                    b.Navigation("propiedades");
                });

            modelBuilder.Entity("proyecto_Nel.Models.propiedades", b =>
                {
                    b.Navigation("propietarios_propiedad");
                });

            modelBuilder.Entity("proyecto_Nel.Models.propietario", b =>
                {
                    b.Navigation("propietarios_propiedad");
                });
#pragma warning restore 612, 618
        }
    }
}
